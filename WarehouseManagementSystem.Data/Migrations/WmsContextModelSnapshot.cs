// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WarehouseManagementSystem.Data;

namespace WarehouseManagementSystem.Data.Migrations
{
    [DbContext(typeof(WmsContext))]
    partial class WmsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WarehouseManagementSystem.Data.Models.AssetType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AssetTypes");
                });

            modelBuilder.Entity("WarehouseManagementSystem.Data.Models.Checkout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Since")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Until")
                        .HasColumnType("datetime2");

                    b.Property<int>("WarehouseAssetId")
                        .HasColumnType("int");

                    b.Property<int?>("WarehouseEmployeeCardId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WarehouseAssetId");

                    b.HasIndex("WarehouseEmployeeCardId");

                    b.ToTable("Checkouts");
                });

            modelBuilder.Entity("WarehouseManagementSystem.Data.Models.CheckoutHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CheckedIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CheckedOut")
                        .HasColumnType("datetime2");

                    b.Property<int>("WarehouseAssetId")
                        .HasColumnType("int");

                    b.Property<int>("WarehouseEmployeeCardId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WarehouseAssetId");

                    b.HasIndex("WarehouseEmployeeCardId");

                    b.ToTable("CheckoutHistories");
                });

            modelBuilder.Entity("WarehouseManagementSystem.Data.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int?>("HomeWarehouseBranchId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WarehouseEmployeeCardId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HomeWarehouseBranchId");

                    b.HasIndex("WarehouseEmployeeCardId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("WarehouseManagementSystem.Data.Models.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Statuses");
                });

            modelBuilder.Entity("WarehouseManagementSystem.Data.Models.WarehouseAsset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ManufactureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("StatusId");

                    b.ToTable("WarehouseAssets");

                    b.HasDiscriminator<string>("Discriminator").HasValue("WarehouseAsset");
                });

            modelBuilder.Entity("WarehouseManagementSystem.Data.Models.WarehouseBranch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime>("OpenDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WarehouseBranches");
                });

            modelBuilder.Entity("WarehouseManagementSystem.Data.Models.WarehouseEmployeeCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("WarehouseEmployeeCards");
                });

            modelBuilder.Entity("WarehouseManagementSystem.Data.Models.Material", b =>
                {
                    b.HasBaseType("WarehouseManagementSystem.Data.Models.WarehouseAsset");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PurposeShortDescription")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasDiscriminator().HasValue("Material");
                });

            modelBuilder.Entity("WarehouseManagementSystem.Data.Models.Tool", b =>
                {
                    b.HasBaseType("WarehouseManagementSystem.Data.Models.WarehouseAsset");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("WarrantyDate")
                        .HasColumnType("datetime2");

                    b.HasDiscriminator().HasValue("Tool");
                });

            modelBuilder.Entity("WarehouseManagementSystem.Data.Models.Checkout", b =>
                {
                    b.HasOne("WarehouseManagementSystem.Data.Models.WarehouseAsset", "WarehouseAsset")
                        .WithMany()
                        .HasForeignKey("WarehouseAssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WarehouseManagementSystem.Data.Models.WarehouseEmployeeCard", "WarehouseEmployeeCard")
                        .WithMany("Checkouts")
                        .HasForeignKey("WarehouseEmployeeCardId");
                });

            modelBuilder.Entity("WarehouseManagementSystem.Data.Models.CheckoutHistory", b =>
                {
                    b.HasOne("WarehouseManagementSystem.Data.Models.WarehouseAsset", "WarehouseAsset")
                        .WithMany()
                        .HasForeignKey("WarehouseAssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WarehouseManagementSystem.Data.Models.WarehouseEmployeeCard", "WarehouseEmployeeCard")
                        .WithMany()
                        .HasForeignKey("WarehouseEmployeeCardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WarehouseManagementSystem.Data.Models.Employee", b =>
                {
                    b.HasOne("WarehouseManagementSystem.Data.Models.WarehouseBranch", "HomeWarehouseBranch")
                        .WithMany("Employees")
                        .HasForeignKey("HomeWarehouseBranchId");

                    b.HasOne("WarehouseManagementSystem.Data.Models.WarehouseEmployeeCard", "WarehouseEmployeeCard")
                        .WithMany()
                        .HasForeignKey("WarehouseEmployeeCardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WarehouseManagementSystem.Data.Models.WarehouseAsset", b =>
                {
                    b.HasOne("WarehouseManagementSystem.Data.Models.WarehouseBranch", "Location")
                        .WithMany("WarehouseAssets")
                        .HasForeignKey("LocationId");

                    b.HasOne("WarehouseManagementSystem.Data.Models.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
